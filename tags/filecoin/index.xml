<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>filecoin on FILVIP</title>
    <link>/tags/filecoin/</link>
    <description>FILVIP (filecoin)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Feb 2019 14:36:16 +0800</lastBuildDate>
    
    <atom:link href="/tags/filecoin/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Filecoin 是什么，看完这篇文章你就懂了</title>
      <link>/posts/filecoin-shi-shi-yao-kan-wan-zhe-pian-wen-zhang-ni-jiu-dong-liao/</link>
      <pubDate>Fri, 15 Feb 2019 14:36:16 +0800</pubDate>
      
      <guid>/posts/filecoin-shi-shi-yao-kan-wan-zhe-pian-wen-zhang-ni-jiu-dong-liao/</guid>
      <description>&lt;p&gt;昨天是 2019 年的情人节（2/14），没想到 Filecoin 在 Twitter 放出一条重磅消息，宣布已将 &lt;a href=&#34;https://github.com/filecoin-project/go-filecoin&#34;&gt;Filecoin 项目&lt;/a&gt;开源，提供测试网络，详细报道可以参考官方&lt;a href=&#34;https://filecoin.io/blog/opening-filecoin-project-repos/&#34;&gt;博文&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/images/filecoin/filecoin.png&#34; alt=&#34;filecoin.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;什么是-filecoin&#34;&gt;什么是 Filecoin?&lt;/h3&gt;
&lt;p&gt;Filecoin 是一个去中心化的存储网络，能将海量用户的闲散存储资源充分利用起来，从而构建一套超低成本的可靠存储系统。&lt;/p&gt;
&lt;p&gt;因为它没有中心，所以会用到区块链技术，只不过一般区块链使用的是算力挖矿的工作量证明（Proof-of-Work mining），而 Filecoin 使用的是存储工作量证明(Proof-of-Storage)。&lt;/p&gt;
&lt;h3 id=&#34;与-ipfs-的关系&#34;&gt;与 IPFS 的关系&lt;/h3&gt;
&lt;p&gt;在谈 Filecoin 之前想必大家对 IPFS 已经有过了解，那二者有什么关系呢？&lt;/p&gt;
&lt;p&gt;简单来说，IPFS 主要负责 P2P 网络中的内容寻值和内容传输，而 Filecoin 是内容永久存储的激励层，它们之间是相互补充的关系。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IPFS addresses and moves content; Filecoin is the missing incentive layer。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;filecoin-架构&#34;&gt;Filecoin 架构&lt;/h3&gt;
&lt;p&gt;我们可以把 Filecoin 简化为两层，一个是区块链，主要是记录全网状态（一个去中心化的状态机），包括所有钱包账户和余额，市场订单匹配记录。另外一个是存储的解决方案，主要包括副本策略（纠删码，多副本），端到端加密，存储时间和续费策略，存储市场匹配等。&lt;/p&gt;
&lt;p&gt;它主要包括 4 种角色：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;存储矿工（Storage miners）： 将自己的磁盘抵押出来，提供存储服务，类似云厂商的对象存储&lt;/li&gt;
&lt;li&gt;检索矿工（Retrieval miners）：可以帮助用户快速的检索到内容，类似于传统意义的 CDN&lt;/li&gt;
&lt;li&gt;存储客户端（Storage clients）：能够上传内容到 Filecoin，类似对象存储上传客户端&lt;/li&gt;
&lt;li&gt;检索客户端（Retrieval clients）：能够从 Filecin 检索到内容，类似对象存储下载客户端&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;如何挖矿&#34;&gt;如何挖矿？&lt;/h3&gt;
&lt;p&gt;挖矿就是在 Filecoin 网络中获取虚拟货币（FIL），主要可以通过以下途径：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;成为存储矿工，在市场中通过报价的方式出租存储空间，当匹配成功，将获取相应报酬&lt;/li&gt;
&lt;li&gt;成为检索矿工，帮助内容下载客户端下载内容&lt;/li&gt;
&lt;li&gt;成为数据修复矿工，帮助修复丢失或损坏的数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目前版本主要实现的是存储矿工部分，其它以后会相继完成。&lt;/p&gt;
&lt;p&gt;那如何成为存储矿工呢？&lt;/p&gt;
&lt;p&gt;Step 1: 通过抵押资产创建存储矿工&lt;/p&gt;
&lt;p&gt;例如： 创建一个矿工承诺10个扇区（目前每个256 MiB）和100 FIL作为抵押，消息气价格为0 FIL /unit，限制1000个气体单位。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;go-filecoin miner create 10 100 --price=0 --limit=1000 --peerid `go-filecoin id | jq -r &#39;.ID&#39;`
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这一步可能需要较长时间，主要确认账户余额是否足够抵押，如果创建成功将返回矿工地址。&lt;/p&gt;
&lt;p&gt;Step 2: 启动矿工&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;go-filecoin mining start
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Step 3: 创建存储订单请求&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// 获取存储矿工地址
export MINER_ADDR=`go-filecoin config mining.minerAddress | tr -d \&amp;quot;` 

// 获取矿工拥有者（Filecoin 节点） 地址 
export MINER_OWNER_ADDR=`go-filecoin miner owner $MINER_ADDR`

// 创建一个报价请求，例如以0.000000001 FIL/字节/块的价格询问，对2880块有效，消息气价为0 FIL/unit，限制为1000气体单位
go-filecoin miner set-price --from=$MINER_OWNER_ADDR --miner=$MINER_ADDR --price=0 --limit=1000 0.000000001 2880 # output: CID of the ask

// 查询报价列表
go-filecoin client list-asks --enc=json | jq 
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;如何存取数据&#34;&gt;如何存取数据？&lt;/h3&gt;
&lt;p&gt;想使用 Filecoin 来存储数据，必须保证节点钱包具有充足的余额（FIL），这个等以后上线主网后可以通过交易市场购买，目前测试网络可以通过 &lt;a href=&#34;https://github.com/filecoin-project/go-filecoin/wiki/Getting-Started#get-fil-from-the-filecoin-faucet&#34;&gt;faucet&lt;/a&gt; 免费获取。&lt;/p&gt;
&lt;p&gt;Step 1： 添加存储的内容到本地节点&lt;/p&gt;
&lt;p&gt;这点很像 &lt;code&gt;ipfs add xx&lt;/code&gt;， 例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo &amp;quot;Hi my name is $USER&amp;quot;&amp;gt; hello.txt
export CID=`go-filecoin client import ./hello.txt`
go-filecoin client cat $CID
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;也可以通过文件导入：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export CID=`go-filecoin client import ~/Desktop/sample-data-master/camel.jpg`
go-filecoin client cat $CID &amp;gt; image.png &amp;amp;&amp;amp; open image.png
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Step 2: 查询存储市场，获取报价&lt;/p&gt;
&lt;p&gt;可以通过命令查询存储矿工的报价列表：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;go-filecoin client list-asks --enc=json | jq
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;结果类似：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;Miner&amp;quot;: &amp;quot;fcqxvnl37zdv8clc26j6r43zn8md7tc2mrfx77vru&amp;quot;,
  &amp;quot;Price&amp;quot;: &amp;quot;2.5&amp;quot;,
  &amp;quot;Expiry&amp;quot;: 588,
  &amp;quot;ID&amp;quot;: 0,
  &amp;quot;Error&amp;quot;: null
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Step 3: 匹配报价&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;go-filecoin client propose-storage-deal &amp;lt;miner&amp;gt; &amp;lt;data&amp;gt; &amp;lt;ask&amp;gt; &amp;lt;duration&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;miner: 通过 &lt;code&gt;go-filecoin client list-asks&lt;/code&gt; 出来的矿工地址&lt;/li&gt;
&lt;li&gt;data: 本地导入内容的 CID&lt;/li&gt;
&lt;li&gt;ask:  通过 &lt;code&gt;go-filecoin client list-asks&lt;/code&gt; 列出来的 ID（通常都为 0）
-duration: 希望存储的时间周期，30秒为一个blocks, 所有一天就是 (2 blocks/min * 60 min/hr * 24 hr/day) = 2880 blocks。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Step 4: 矿工存储数据&lt;/p&gt;
&lt;p&gt;当匹配订单(&lt;code&gt;propose-storage-deal&lt;/code&gt;)创建成功后， 本地数据将自动通过 &lt;a href=&#34;https://github.com/ipfs/specs/tree/master/bitswap&#34;&gt;bitswap&lt;/a&gt; 传输到矿工节点。&lt;/p&gt;
&lt;p&gt;Step 5: 客户端检索数据&lt;/p&gt;
&lt;p&gt;客户端可以通过提交查询订单和数据恢复操作来下载数据，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// 创建查询订单
go-filecoin client query-storage-deal &amp;lt;dealID&amp;gt;

// 当查询订单创建后，可以通过订单 minner 的地址以及想查询的内容 ID 来获取内容
go-filecoin retrieval-client retrieve-piece &amp;lt;minerAddress&amp;gt; &amp;lt;CID&amp;gt; # 可能需要1分钟
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;现状&#34;&gt;现状&lt;/h3&gt;
&lt;p&gt;当前 Filecoin 还是较为早期阶段，部分功能还在开发中，而且存在一定&lt;a href=&#34;https://github.com/filecoin-project/go-filecoin/blob/master/KNOWN_ISSUES.md&#34;&gt;安全问题&lt;/a&gt;。现在上线的是测试网络，主网预计 2019 Q3 上线。&lt;/p&gt;
&lt;p&gt;核心功能进展：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;存储矿工： 基本完成&lt;/li&gt;
&lt;li&gt;检索矿工： 待开发&lt;/li&gt;
&lt;li&gt;数据修复矿工： 待开发&lt;/li&gt;
&lt;li&gt;客户端加密： 待开发&lt;/li&gt;
&lt;li&gt;纠删码存储： 待开发&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;思考和展望&#34;&gt;思考和展望&lt;/h3&gt;
&lt;p&gt;Filecoin 是完全去中心化的存储系统，优劣式明显。&lt;/p&gt;
&lt;p&gt;劣势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;去中心化方案，引入区块链，必然会带来性能的降低（QPS 较低，确认时间长），这决定了它不能像标准对象存储（3副本）那样提供高速的上传下载能力。&lt;/li&gt;
&lt;li&gt;Filecoin 主要激励机制是靠虚拟货币，但它具有很大的价格波动性，而存储文件需要很长的时效性，币价的波动性会带来存储的不稳定性，矿工存储利益不平衡。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解决办法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Filecoin 为我们提供了将无限闲置资源利用起来的可能性，这在未来数据大爆炸时代是很有用的。虽然它存在上诉说的性能问题，但它可以用作低频存储（冷数据）而且这部分的存储量是巨大的，只要它具有超级吸引力的价格，而在热数据方面我们可以考虑通过 IPFS 来做缓存（类似 CDN），从而形成闭环。&lt;/li&gt;
&lt;li&gt;对于币价的不稳定性这点，可以通过快速变现的方式减少持有的货币，或者降低订单存储结算周期，按照每周付费。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;结语&#34;&gt;结语&lt;/h3&gt;
&lt;p&gt;在 Filecoin 之前已经有不少去中心化的存储，比如（Sia, StorJ），但它们都没有真正流行起来，很大原因就是价格上没有绝对优势。&lt;/p&gt;
&lt;p&gt;Filecoin 能否流行起来，需要时间来证明，不过就目前来看，Filecoin 绝对是去中心存储市场中最耀眼的那一个。&lt;/p&gt;
&lt;p&gt;参考链接：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/filecoin-project/go-filecoin/wiki/How-Filecoin-Works&#34;&gt;How Filecoin Works&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/filecoin-project/go-filecoin/wiki/Mining-Filecoin&#34;&gt;Mining Filecoin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/filecoin-project/go-filecoin/wiki/Storing-on-Filecoin&#34;&gt;Storing on Filecoin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>IPFS 生态概览</title>
      <link>/posts/ipfs-sheng-tai-gai-lan/</link>
      <pubDate>Wed, 22 Aug 2018 15:27:35 +0800</pubDate>
      
      <guid>/posts/ipfs-sheng-tai-gai-lan/</guid>
      <description>&lt;p&gt;要想全面了解 IPFS 就不得不提 &lt;a href=&#34;https://protocol.ai/work/&#34;&gt;Protocal labs&lt;/a&gt;，目前它主要的项目包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ipfs.io/&#34;&gt;IPFS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://filecoin.io/&#34;&gt;Filecoin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://libp2p.io/&#34;&gt;libp2p&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ipld.io/&#34;&gt;IPLD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://multiformats.io&#34;&gt;Multiformats&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那为什么会有这些项目，这些项目产生的背景，以及最核心的功能又是什么？看完本篇概览，你就会找到答案。&lt;/p&gt;
&lt;h2 id=&#34;ipfs&#34;&gt;IPFS&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;IPFS is a new protocol to decentralize the web. IPFS enables the creation of completely decentralized and distributed applications, using content addressing and digital signatures。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;IPFS是一种去中心化网络的新协议。 IPFS支持使用内容寻址和数字签名创建完全去中心化的分布式应用程序。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以看到， IPFS 主要作为一种网络协议，使得通过它构建完全去中心的分布式应用程序（DApp）成为可能（当然还有其他的方式，例如 ETH），但是就像传统中心化的应用，DApp 对于永久可靠性存储的需求一直都在，并且成为 DApp 能够爆发的关键一环，当然也直接决定了 IPFS 协议最终的成功。&lt;/p&gt;
&lt;p&gt;虽然已经有不少去中心化存储网络(DSN)解决方案，但是介于方案的成熟度，性能，以及与 IPFS 整合能力各方面的考量，由 Protocal labs 自己来实现 Filecoin 的方案才是最靠谱的。这样也会大量利用到 IPFS 已有的技术，例如底层网络连接和数据交换（libp2p）以及去中心化数据的通用定义（IPLD）。&lt;/p&gt;
&lt;p&gt;在 IPFS 技术栈中不得不提 ipfs-cluster, 它是 IPFS 的 Pinset 编排程序，通过它可以构建更大的容量的 IPFS PinSet 集群，利用它可以构建一个去中心化的永久存储系统。个人认为它和 Filecoin 关注的重点不同，因为 Filecoin 是在公链中构建带有存储激励的存储网络，而 ipfs-cluster 相当于通过自己可控的节点构建超大的 IPFS PinSet 集群，而且目前 ipfs-cluster 的成熟度高于 Filecoin。&lt;/p&gt;
&lt;h2 id=&#34;filecoin&#34;&gt;Filecoin&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Filecoin is a cryptocurrency powered storage network. Miners earn Filecoin by providing open hard-drive space to the network, while users spend Filecoin to store their files encrypted in the decentralized network.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Filecoin 是一种加密货币驱动的存储网络。 矿工通过向网络提供开放的硬盘空间来获得Filecoin，而用户使用Filecoin来存储他们在分散网络中加密的文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;DApp 是需要大量永久性去中心化存储的，这一点 IPFS 无法满足，所以 Filecoin 孕育而生，而且通过 FileCoin + IPFS 可以很好的解决整个 DApp 的内容存储和分发问题。&lt;/p&gt;
&lt;h2 id=&#34;libp2p&#34;&gt;libp2p&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;libp2p is a modular networking stack. libp2p brings together a variety of transports and peer-to-peer protocols, making it easy for developers to build large, robust p2p networks.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;libp2p 是一个模块化的网络技术栈。 libp2p汇集了各种传输和点对点协议，使开发人员可以轻松构建大型，强大的 p2p 网络。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;目前去中心化的网络都是基于 p2p 来构建的，例如 BTC, ETH 和 IPFS, 因为 IPFS 包含了一个强大的 p2p 网络，那么将它抽离出来,成为一个单独的项目，能够被其它开源项目所复用是非常有价值的。&lt;/p&gt;
&lt;h2 id=&#34;ipld&#34;&gt;IPLD&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;IPLD is the data model for the Decentralized Web. It connects all data through cryptographic hashes, and makes it easy to traverse and link to.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;IPLD是去中心化 Web 的数据模型。 它通过加密哈希连接所有数据，并使其易于遍历和链接。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;IPFS 属于去中心化的 Web 协议，那么底层就依赖 IPLD，这样的数据结构能够在各种去中心的网络中实现数据共享和互访，例如（IPFS 和 ETH，BTC 等）。&lt;/p&gt;
&lt;h2 id=&#34;multiformats&#34;&gt;Multiformats&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;The Multiformats Project is a collection of protocols to future-proof systems, today. Self-describing formats make your systems interoperable and upgradable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Multiformats 项目是当今面向未来系统的协议集合。 自描述的格式使你的系统可互操作和可升级。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Multiformats 主要强调其自描述性，故名思议可以通过格式就能知道其中含义，那么作为一组协议集合，它目前包含了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;multihash：自描述的 hash，主要用于 IPFS 中对于内容加密 hash 的描述。&lt;/li&gt;
&lt;li&gt;multiaddr：自描述的网络地址，主要用于 libp2p 的网络地址描述。&lt;/li&gt;
&lt;li&gt;multibase： 自我识别的基础编码。&lt;/li&gt;
&lt;li&gt;multicodec： 自描述序列化。&lt;/li&gt;
&lt;li&gt;multistream： 字描述的流式网络协议。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;IPFS 的目标是要在去中心化网络中主流（甚至唯一）的网络协议（类似 Web 中的 HTTP 的地位），但只有 IPFS协议显然是不够的，去中心化应用（网络）的普及，需要整个生态的共同发展，所以才有了后来的去中心化的数据模型（IPLD），去中心化的字描述数据格式（Multiformats），去中心化的永久性存储（FileCoin) 以及快速构建大型 p2p 应用的 libp2p 。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>